# Published_CDR3s.py v3
# August 2013

# Built combining /home/jme/TCR/Sequences/PBTPHIV/freq/CDR3/HIV_CDR3s.py, Herpes_CDR3s.py and Published_CDR3s.py
  # NB - updated HIV_CDR3s with few new papers since last time I ran these analyses
  
  # Outputs (for HIV, EBV or CMV*) the proportional frequency of CDR3s that have been published as Ag-specific
    # Have to occur twice or more in each repertoire (as a very rudimentary feature to get above the worst of the sampling noise)
      # NB can change that threshold if needed
    # * Have to set the pathogen variable anew each time
  # Run this on each option, and then plug the output variables into PlotPublished_CDR3s.R

# v2 also looks for invariant/non-MHC restricted CDR3s

# v3 (28th Aug) - fixed Mendoza et al CDR3s, which had erroneously gained an extra C residue at V-terminal end 
  # Also added a new paper's worth of CDR3s, from Sun et al 2014

from __future__ import division
import os
import collections as coll
import itertools as it
import re
import matplotlib.pyplot as plt
import random
import numpy as np

pathogen = "e"
  # Option that allows users to specify which pathogen-specific CDR3s they look for.
  # Options currently are only: "h" (HIV); "c" (CMV) and "e" (EBV)


def basename(filename):
  # given a .cdr3 filename, returns the base (i.e. the individual)
  if "HV" in filename:
    return re.split('[_.v]', filename)[3]
  elif "P" in filename:
    return re.split('[_.v]', filename)[3]


def getcdr(line):
  # split a line of a .cdr3 file into its components, returned as a list
    # output returned: 0 = dcr, 1 = cdr, 2 = frequence (of that dcr)
  linesplit = line.split(", ")
  cdr = linesplit[0]
  freq = int(linesplit[1])
  return(cdr, freq)


aa = {
  'A' : 'alanine',
  'R' : 'arginine',
  'N' : 'asparagine',
  'D' : 'aspartic acid',
  'C' : 'cysteine',
  'Q' : 'glutamine',
  'E' : 'glutamic acid',
  'G' : 'glycine',
  'H' : 'histidine',
  'I' : 'isoleucine',
  'L' : 'leucine',
  'K' : 'lysine',
  'M' : 'methionine',
  'F' : 'phenylalanine',
  'P' : 'proline',
  'S' : 'serine',
  'T' : 'threonine',
  'W' : 'tryptophan',
  'Y' : 'tyrosine',
  'V' : 'valine'
} # from tripletplay


print "Getting data"

# Get all .cdr3 files (contain (comma-delimited) decombinator index : CDR3 , frequency)

a_healthy_v1_files_all = [f for f in os.listdir(os.getcwd()) if 
                      f.endswith("v1a.cdr3") and "HV" in f]
b_healthy_v1_files_all = [f for f in os.listdir(os.getcwd()) if 
                      f.endswith("v1b.cdr3") and "HV" in f]

a_healthy_v1_files = a_healthy_v1_files_all[:4]
b_healthy_v1_files = b_healthy_v1_files_all[:4]

a_healthy_v2_files = [f for f in os.listdir(os.getcwd()) if 
                      f.endswith("v2a.cdr3") and "HV" in f]
b_healthy_v2_files = [f for f in os.listdir(os.getcwd()) if 
                      f.endswith("v2b.cdr3") and "HV" in f]

a_HIV_v1_files = [f for f in os.listdir(os.getcwd()) if 
                  f.endswith("v1a.cdr3") and "P0" in f]
b_HIV_v1_files = [f for f in os.listdir(os.getcwd()) if 
                  f.endswith("v1b.cdr3") and "P0" in f]

a_HIV_v2_files = [f for f in os.listdir(os.getcwd()) if 
                  f.endswith("v2a.cdr3") and "P0" in f]
b_HIV_v2_files = [f for f in os.listdir(os.getcwd()) if 
                  f.endswith("v2b.cdr3") and "P0" in f]

a_healthy_v1_files.sort()
b_healthy_v1_files.sort()

a_healthy_v2_files.sort()
b_healthy_v2_files.sort()

a_HIV_v1_files.sort()
b_HIV_v1_files.sort()

a_HIV_v2_files.sort()
b_HIV_v2_files.sort()

all_alpha_files = a_healthy_v1_files + a_healthy_v2_files + a_HIV_v1_files + a_HIV_v2_files
all_beta_files = b_healthy_v1_files + b_healthy_v2_files + b_HIV_v1_files + b_HIV_v2_files


# Create a donor-specific dictionary detailing all CDR3s found (in both union of both bleeds)

healthy_donors = []
HIV_patients = []

all_alpha = []
all_beta = []

hvv1_alpha = []
hivv1_alpha = []

hvv1_beta = []
hivv1_beta = []

hvv2_alpha = []
hivv2_alpha = []

hvv2_beta = []
hivv2_beta = []

alla_cdr3s = coll.Counter()
allb_cdr3s = coll.Counter()

for d in a_healthy_v1_files:
  healthy_donors.append(basename(d))
  
for d in healthy_donors:  
  vars()[d + "v1a"] = coll.Counter()
  vars()[d + "v1b"] = coll.Counter()

  vars()[d + "v2a"] = coll.Counter()
  vars()[d + "v2b"] = coll.Counter() 
    
  all_alpha.append(d + "a")
  all_beta.append(d + "b")

  hvv1_alpha.append(d + "v1a")
  hvv1_beta.append(d + "v1b")
     
  hvv2_alpha.append(d + "v2a")
  hvv2_beta.append(d + "v2b")  
  
for d in a_HIV_v1_files:
  HIV_patients.append(basename(d))
  
for d in HIV_patients:  
  vars()[d + "v1a"] = coll.Counter()
  vars()[d + "v1b"] = coll.Counter()
  
  vars()[d + "v2a"] = coll.Counter()
  vars()[d + "v2b"] = coll.Counter()

  all_alpha.append(d + "a")
  all_beta.append(d + "b")

  hivv1_alpha.append(d + "v1a")
  hivv1_beta.append(d + "v1b")
     
  hivv2_alpha.append(d + "v2a")
  hivv2_beta.append(d + "v2b")  


print "Generating donor-specific dictionaries"

# Populate donor-specific dictionaries

for d in all_alpha_files:
 
  thisfile = open(d, "rU")
  
  if "v1" in d:
    outdict = vars()[basename(d)+"v1a"]
  elif "v2" in d:
    outdict = vars()[basename(d)+"v2a"]
      
  for line in thisfile:
    cdretc = getcdr(line)
    cdr = cdretc[0]
    freq = cdretc[1]
    outdict[cdr] += freq
    alla_cdr3s[cdr] += 1
    
    
for d in all_beta_files:
 
  thisfile = open(d, "rU")
  
  if "v1" in d or "A" in d:
    outdict = vars()[basename(d)+"v1b"]
  elif "v2" in d or "B" in d:
    outdict = vars()[basename(d)+"v2b"]
    
  for line in thisfile:
    cdretc = getcdr(line)
    cdr = cdretc[0]
    freq = cdretc[1]
    outdict[cdr] += freq
    allb_cdr3s[cdr] += 1
    
    
###############################################################################################################################
###########################  ####  #####  #####  #######  #####################################################################
###########################  ####  #####  ######  #####  ######################################################################
###########################        #####  #######  ###  #######################################################################
###########################  ####  #####  ########  #  ########################################################################
###########################  ####  #####  #########   #########################################################################
###############################################################################################################################

if pathogen == "h":
  # Bourcier et al, JoV 2001
  # http://dx.doi.org/10.1128/JVI.75.20.9836-9843.2001 

  hiv_alpha_bourcier = ['CATVRDGNNTDKLIFGTG', 'CAVAHNYGQNFVFGPG', 'CAVEQRMVADKLIFGTG', 'CIRSGSARQLTFGSG', 'CAVDSGGYQKVTFGIG', 'CAVNIGFGNVLHCGSG', 'CAVNPPFGNEKLTFGTG', 'CAMMGGGSEKLVFGKG', 'CAWDNAGNMLTFGGG', 'CAYLNTGNQFYFGTG', 'CAYRTLYDNFGNEKLTFGTG', 'CAVKESLVEMRKLTFGTG', 'CACFQGAQKLVFGQG', 'CAAFQGAQKLVFGQG']
  hiv_beta_bourcier = ['CASSQERLSFGTKNIQYFGAG', 'CASSSEYRSGANVLTFGAG', 'CASSKPSVMNTEAFFGQG', 'CASSVPGAGEETQYFGPG', 'CASSSPGQGNYEQYFGPG', 'CASSTPGQGAYEQYFGPG', 'CASSYPGQGEHEQYFGPG', 'CASSSPGTGVNEQFFGPG', 'CASSKPGLGGTGELFFGEG', 'CASSRPGLAGRNEQFFGPG', 'CASQLGQGVHGYGYTFGSG', 'CASQDFLSSGAYNEQFFGPG', 'CASSLTIGGAQFFGQG', 'CASSFMTDTQYFGPG', 'CASSLPDTQYFGPG', 'CASSARLGQPQHFGDG']

  # Kyung Lee et al, JCI 2001
  # http://dx.doi.org/10.1172/JCI16028  

  hiv_beta_kyung = ['CASSLDFEGRVFFGXG', 'CASSSTMGQGRSPLHFGXG', 'CASSWGTAGTDTQYFGXG', 'CASSLDFEGRVFFGXG', 'CASSYSMATGGNIQYFGXG', 'CASSSIAGGLAGELFFGXG', 'CASSVQGAEAFFGXG', 'CASSLSGGYSNQPQHFGXG', 'CASSLLDGGRDTQYFGXG', 'CASSSAQGAPLNWLFFGXG', 'CSAGSGTSGSNEQFGXG', 'CASGQLGDYTFGXG', 'CASSLLLSGRSDTQYXG', 'CSAPNAVGELFFGXG', 'CASSSVYAVNSPLHXG', 'CASSPDSQGIYEQYXG', 'CSVGQGYGYTFGXG', 'CSANRGVSGELFFGXG', 'CASSGASYGYTFGXG', 'CASSPRTGNYGYTFGXG', 'CASSSRTSGGFTQYFGXG', 'CASSSIAGGLAGELFFGXG', 'CASSLEAGLTEAFFGXG', 'CASSLTGSLGNQPQHFGXG', 'CASSQGRWGGTDTQYFGXG', 'CAISDQTGTSAEAFFGXG', 'CASSQDSAQPQYFGXG', 'CASSLGGTEAFFGXG', 'CASSSTMGQGRSPLHFGXG', 'CASSYSMATGGNIQYFGXG', 'CASRAGGGSGANVLTFGXG', 'CASSSAQGAPLNWLFFGXG', 'CASSLLDGGRDTQYFGXG', 'CASSLTGSTPLKWFFGXG', 'CASSPFVLDRGGERLFFGXG', 'CASSPPRTGAPYGYTFGXG', 'CAGGSGTNYGYTFGXG', 'CASSVTAPPDTQYFGXG', 'CASSLEVGYYEQYFGXG', 'CASSSIAGMGETQYFGXG', 'CASSQGTGVSTEAFFGXG', 'CASSAPTRLYEQYFGXG', 'CASSHLEGYEQYFGXG', 'CASSPINTPNTGELFFGXG', 'CASGTTGEAYGYTFGXG', 'CATSAGGRTGELFFGXG', 'CASSPTDGLNTEAFFGXG', 'CASSLAGQYTGELFFGXG', 'CASSQGRTASGPPGYTFGXG', 'CASSQRGGSYNEQFFGXG', 'CASSKTSGKPNEQFFGXG', 'CASSGEYSNGPQHFGXG', 'CASGDGTGDEQYFGXG', 'CASSLRLASGNTIYFGXG', 'CASSPSGLDTEAFFGXG', 'CASSAGTGGNTIYFGXG']

  # Kou et al, CDLI 2000
  # http://www.pubmedcentral.nih.gov/articlerender.fcgi?artid=95992&tool=pmcentrez&rendertype=abstract

  hiv_beta_kou = ['CASSVDRV KAFFGQG', 'CASSPDREGLAFFGQG', 'CASSQRRIGELFFGPG', 'CASSGRLARDEQFFGEG']

  # Kolowos et al, JI 1999
  # http//www.jimmunol.org/content/162/12/7525

  hiv_alpha_kolowos = ['CVVTPHGSGNTGKLIFGQG', 'CVATGANNLFFGTG', 'CVVNGANNLFFGTG']
  hiv_beta_kolowos = ['CASSLDGDLRGNIQYFGAG', 'CASSFGLIGTDQETQYFGPG', 'CASSLGFLGTDQETQYFGPG']

  # Lichterfeld et al, JoV 2007
  # http://dx.doi.org/10.1128/JVI.01388-06

  hiv_beta_lichterfeld07 = ['CSVWGTGKTYEQYFGXG', 'CSVWGEGRSYEQYFGXG', 'CSATILAGVPYGEQYFGXG', 'CSATILAGVPYGEQYFGXG', 'CSATILAGVPYGGQHFGXG', 'CSASEGTSSYEQYFGXG', 'CASSFDREVTGELFFGXG', 'CASSPDGGNTEAFFGXG', 'CASSVGAGTEAFFGXG', 'CAISESGYGGPPGANVLTFGXG', 'CTISESGYRGPPGANVLTFGXG', 'CAISEPGYRGPPGANVLTFGXG', 'CAISESGYRGPPGANVLTFGXG', 'CASRPTDRNTGELFFGXG', 'CASSLAAGGPYEQYFGXG', 'CASSPPSGSYEQYFGXG', 'CASSLESGQRPYEQYFGXG', 'CASSIGPLEGNEQFFGXG', 'CASSWGQGOLSYEQYFGXG', 'CASSYRGQGNYGYTFGXG', 'CASSYERGMNTEAFFGXG', 'CASSMGQGATEAFFGXG', 'CASSYPMGANEKLFFGXG', 'CASRIGQGTVGELFFGXG', 'CSVDNSYEQYFGXG', 'CSVVGLESSYEQYFGXG', 'CSVGENTEAFFGXG', 'CASSIFGSPFNQPQHFGXG', 'CATLREGPTTGELFFGXG', 'CASSLGQGLANYGYTFGXG', 'CSARPMAASGLTYEQYFGXG', 'CASSEYGAAVYEQYFGXG', 'CASSLNLRGSSGNTIYFGXG', 'CASSSNPGTSGGYSYEQYFGXG', 'CASSGSPGLAGEQTFGXG', 'CASSLLGQYNEQFFGXG', 'CASSLLGQCNEQFFGXG', 'CASSFHPGQGASYSNQPQHFGXG', 'CASSYERGGLPKNIQYFGXG', 'CASSLGQGRSLGHEQYFGXG', 'CASSPRDRVIEDTQYFGXG', 'CSARQYRTDMNTEAFFGXG', 'CSVEVGAGETQYFGXG', 'CSVEDLGNEQFFGXG', 'CSAETSDSYEQYFGXG', 'CASSYEWGGLPKNIQYFGXG', 'CASRLVGIGNSPLHFGXG', 'CAISEDGGETQYFGXG', 'CAISGDGGETQYFGXG', 'CTISEWGGETQYFGXG', 'CASSFGGDEQHFGXG', 'CASSLGGDTQYFGXG', 'CASSLGGDEQYFGXG', 'CASSFGGDTQYFGXG', 'CASSLRDEQYFGXG', 'CSVEDSGNEQFFGXG', 'CSVEDRANEQYFGXG', 'CSVRAPPMTSPTDEQYFGXG', 'CASSLDGGETQYFGXG', 'CASSQDGGETQYFGXG', 'CASSEPALAEQYYEQYFGXG', 'CASSFTPGTGAPYSNQPQHFGXG', 'CSVEGGSAYEQYFGXG', 'CASSFDREVTGELFFGXG', 'CASSLDREVTGELFFGXG', 'CSAHLYRAYGYTFGXG', 'CASSMGQHSNQPQHFGXG', 'CASSLAWGRAESSYNEQFFGXG', 'CSVWGTGKTYEQYFGXG', 'CASKWDPGQGSHYSNQPQHFGXG', 'CASKWDPGQGSHYSNQPQHFGXG', 'CSVEPSGRARTYNEQFFGXG', 'CAWDVKDRRIGNEQFFGXG', 'CSARDSGRGIENYEQYFGXG', 'CSASSQRGGIYEQYFGXG', 'CASSLVGVGTSDEQFFGXG', 'CASSFDREVTGELFFGXG', 'CASSLGQGLANYGYTFGXG', 'CASSLSPGTSGSRANEQFFGXG', 'CASSLELAGEDYEQYFGXG', 'CASSLSSNEQFFGXG', 'CASSTLTSGGARDEQFFGXG', 'CASSPVRGRTEAFFGXG', 'CASSLVGPGGREKLFFGXG', 'CASSVLTGGRETQYFGXG', 'CASSIIKGNQPQHFGXG', 'CASSSGLPTNEKLFFGXG', 'CASPYMDARSEAFFGXG', 'CASSVVGDFRETQYFGXG', 'CASSYGGTEAFFGXG', 'CASSLETRNSPLHFGXG', 'CASSLPGQGRTPLHFGXG', 'CASSLPGQGRTPLHFGXG', 'CASSFLPKNEQFFGXG', 'CASSLVRDDRIEQYFGXG', 'CASSFPGQGRTEAFFGXG', 'CSARLSYEQYFGXG', 'CSARDNYEQYFGXG', 'CSARDSYEQYFGXG', 'CSARLDYEQYFGXG', 'CSARYDYEQYFGXG', 'CASSLIPSGGRNEQFFGXG', 'CASSAITSGGARDEQFFGXG', 'CASSVGGDHREEQHFGXG', 'CASSAGDIQYFGXG', 'CASSAGGIQYFGXG', 'CATIRTGFSSYEQYFGXG', 'CASSYSRGSGNTIYFGXG', 'CASSPYRGPNTEAFFGXG', 'CAISAGASFVTRSTDTQYFGXG', 'CAIRSTDTQYFGXG', 'CASRQQGFVFEAKNIQYFGXG', 'CASSEEVEAFFGXG', 'CSAPTSGSAAFFGXG', 'CSARDSIQFSSNQPQHFGXG', 'CASSYSMTSGSFSDLGAKNIQYFGXG', 'CASRPGPVKNTGELFFGXG', 'CASSLYHNTGELFFGXG', 'CASSGGAHFSKIPLAGYNEQFFGXG', 'CASSRTDFTAGELFFGXG', 'CASSLTGHPYEQYFGXG', 'CASSPGEKYEQYFGXG', 'CSVEDRHYEQYFGXG', 'CASSYSRGAGNTIYFGXG', 'CASTRSGGFRDEQYFGXG', 'CASSRRDHQETQYFGXG', 'CASSLTAPDTEAFFGXG', 'CASSGTAPAAEAFFGXG', 'CASSSTAPDTEAFFGXG', 'CASSTAPGTEAFFGXG', 'CASSRSTGELFFGXG', 'CSARDQRDYQETQYFGXG', 'CASSPRTGELFFGXG', 'CASSGQGYGYTFGXG', 'CASSGGSYGYTFGXG', 'CASTGGGYGYTFGXG', 'CASSGQDYGYTFGXG', 'CASSGQGYGYAFGXG', 'CASTGSGYGYTFGXG', 'CASSGQEYGYTFGXG', 'CASTDSYGYTFGXG']
  # NB: 'CASSVRTGELFFGXG' omitted from this list, as it appear in Lichterfeld06 paper list
    # Removal of one prevents it being looked for twice

  # Lichterfeld et al, II 2006
  # http://dx.doi.org/10.1093/intimm/dxl052

  hiv_alpha_lichterfeld06 = ['CAASFTQNGLTFGXG', 'CAVVAQGGSEKLVFGXG', 'CAVSDPGFKTIFGXG', 'CAVLTPLEGGKLIFGXG', 'CGTENSGGYQKVTFGXG', 'CALSAPSGGYQKVTFGXG', 'CAADYFQKLVFGXG', 'CPSLLGGATNKLIFGXG', 'CAVDAGNNRKLIFGXG']

  hiv_beta_lichterfeld06 = ['CASSVRTGELFFGXG', 'CASSERDSQYQETQYFGXG', 'CASSARAFPEGNQPQHFGXG', 'CASSYSGQGAAGELFFGXG', 'CASGEVGELFFGXG', 'CASRETGWGNQPQHFGXG', 'CASSETNRVEMEAFFGXG', 'CATSAGRQRDTGELFFGXG', 'CASSKYNEQFFGXG', 'CASSPPGQVGANVLTFGXG', 'CASSYSRGSGNTIYFGXG', 'CASSPYRGPNTEAFFGXG', 'CAISAGASFVTRSTDTQYFGXG', 'CAIRSTDTQYFGXG', 'CASRQQGFVFEAKNIQYFGXG', 'CASSEEVEAFFGXG', 'CSAPTSGSAAFFGXG', 'CASRDSIQFSSNQPQHFGXG', 'CASSYSMTSGSFSDLGAKNIQYFGXG', 'CASRPGPVKNTGELFFGXG', 'CASSLYHNTGELFFGXG', 'CASSGGAHFSKIPLAGYNEQFFGXG', 'CASSRTDFTAGELFFGXG', 'CASSLTGHPYEQYFGXG', 'CASSPGEKYEQYFGXG', 'CSARGAGGFTHYEQYFGXG', 'CASSLVGFANTGELFFGXG', 'CASSSSGRGLGIQYFGXG', 'CASSVSGFSTDTQYFGXG', 'CSVLKVGTSGFNEQFFGXG', 'CSVPKVGTSGFNEQFFGXG', 'CSVPKTGTSGFNEQFFGXG', 'CSVVAGGPGDTQYFGXG']

  # Dong et al, JEM 2004
  # http://dx.doi.org/10.1084/jem.20032044

  hiv_alpha_dong =['CIVRAPGRADMRFGXG', 'CAVPSGAGSYQLTFGXG', 'CAVKASGSRLTFGXG', 'CAYRPPGTYKYIFGXG']

  hiv_beta_dong = ['CASSYLPGQGDHYSNQPQHFGXG', 'CASSFEAGQGFFSNQPQHFGXG', 'CASSFEPGQGFYSNQPQHFGXG', 'CASSYEPGQVSHYSNQPQHFGXG', 'CASSALASLNEQFFGXG']

  # Chen et al, NI 2012
  # http://dx.doi.org/10.1038/ni.2342

  hiv_beta_chen = ['CSARDRTRANYGYTFGXG', 'CASSGGRRAFFGXG', 'CASSSPDRTYGYTFGXG', 'CASTNRGSEQYFGXG', 'CASSLSGRWSTDTQYFGXG', 'CASSLEGRYSNQPQHFGXG', 'CASSLGTGKVEGYTFGXG', 'CASSPEGPRAIEQFFGXG', 'CATSRELTGGPSYEQYFGXG', 'CASSQARASHLIFGXG', 'CASSEDRDTEAFFGXG', 'CASSEADFEAFFGXG', 'CASSPGQFSHEQYFGXG', 'CASSARTGELFFGXG', 'CSARDGGEQYFGXG', 'CASSPLGNSGNTIYFGXG', 'CASSLDRLEQFFGXG', 'CASRPGLASNEQFFGXG', 'CASRPGQGATEAFFGXG', 'CSARDRGTREVADNYGYTFGXG', 'CATSETGTTLEQYFGXG', 'CASSRDSNEQFFGXG', 'CSAREGLAGVLYEQYFGXG', 'CASSSSGGAGDTQYFGXG', 'CSAPTTEVAGSTDTQYFGXG', 'CASSLTNLGEQYFGXG', 'CASSRTTGELFFGXG', 'CASSAGPGQYGNTIYFGXG', 'CASGGGTVYEQYFGXG', 'CASTNRGSEQYFGXG', 'CASSPGTNAYEQYFGXG', 'CSAREGVEGYTFGXG', 'CASSGGRRAFFGXG', 'CASSQGSGSGNTIYFGXG', 'CASSQVLRGVYGYTFGXG', 'CASSLLAGGTDTQYFGXG', 'CASSPRTGELFFGXG', 'CASSQRTGELFFGXG', 'CASSRATGELFFGXG', 'CASSLEGGANLFGXG', 'CASSVVRGNPNEQFFGXG', 'CASSGSNLEAFFGXG', 'CASSPLGVRAYEQYFGXG', 'CASSPGTSTYEQYFGXG', 'CASSLAGGDSYEQYFGXG', 'CASSGGVFYGYTFGXG', 'CATLGGFPDGYTFGXG']

  # Yu et al, JoV, 2007
  # http://dx.doi.org/10.1128/JVI.01450-07

  hiv_alpha_xu = ['CALVNAGKSTFGXG', 'CAVKTSYDKVIFGXG', 'CVVRVKTSYDKVIFGXG', 'CALRGYGQNFVFGXG', 'CALRGCGQNFVFGXG', 'CAMRATTGGGADGLTFGXG', 'CALSDDNFNKFYFGXG', 'CAMRATTGGGADGFTFGXG', 'CTVIPPNQAGTALIFGXG', 'CVVTVLFISNFGNEKLTFGXG', 'CAVIPPNRAGTALIFGXG', 'CAVIPPNQAGTALIFGXG', 'CVVNGNTDKLIFGXG', 'CALRLTGANNLFFGXG', 'CAVPPIDDKIIFGXG', 'CAVPPIDDKIIFGXG', 'CALDQFYFGXG', 'CAVGGIIQGVQKLVFGXG', 'CAYRSPAYSNTGKLIFGXG', 'CAVGGIVQGAQKLVFGXG', 'CDYRSPAYSNTGKLIFGXG', 'CAVGGIIQGAQKLVFGXG']

  hiv_beta_xu = ['CSAAGRGIYEQYFGXG', 'CASSTTSALETQYFGXG', 'CSAAGGAGVYEQYFGXG', 'CASSALVKTGELFFGXG', 'CSATGGAGVYEQYFGXG', 'CASSAGGAETQYFGXG', 'CASSLRGGANSEKLFFGXG', 'CASSHTSGRAPNEQFFGXG', 'CASSLQDPRSYNSPLHFGXG', 'CASSLFSGNTIYFGXG', 'CAISDTKGLGYEQYFGXG', 'CASSIQADSYNEQFFGXG', 'CAISDTKGLGYEQYFGXG', 'CASSVPGLKVNEQYFGXG', 'CSAREPVNPSSYEQYFGXG', 'CASSTYRLAVDNEQFFGXG', 'CASSLEDQPQHFGXG', 'CASSFDAEQFFGXG', 'CSASLQGGPSPWTANTGELFFGXG', 'CASSLFAERTSRHNEQFFGXG', 'CSATWDRATVTEAFFGXG', 'CASSFSGSEGNEQFFGXG', 'CASSLGGWDEQFFGXG', 'CASSALVKTGERFFGXG', 'CASSPTGGGPEAFFGXG', 'CASSPWTTTDTQYFGXG', 'CASSRENQPQHFGXG']

  # Motozono et al, JoI 2014
  # http://dx.doi.org/10.4049/jimmunol.1302667

  hiv_alpha_motozono = ['CATDDDSARQLTFFGXG', 'CVVSERAGGYQKVFGXG', 'CAAQRANRDDKIIFFGXG', 'CAVSRGGSNYKLTFFGXG', 'CAVSEGGATNKLIFFGXG', 'CATDEAGRRALTFFGXG', 'CATDEDSARQLTFFGXG', 'CATDDAGRRALTFFGXG', 'CAERTGGGNKLTFFGXG', 'CAVTHHGQKLLFFGXG', 'CATDVAGRRALTFFGXG', 'CAMRGPNRDDKIIF']

  hiv_beta_motozono = ['CASSLTGGGELFFFGXG', 'CATSDLQGVRGVNEQFFGXG', 'CASSPPGGRADTQYFFGXG', 'CASSSGRGGEQYFFGXG', 'CASSLTGGNTIYFFGXG', 'CASSSTGGNTIYFFGXG', 'CASSTRDPRQTQYFFGXG', 'CASSLWLPKETQYFFGXG', 'CASRKWNGELFFFGXG', 'CSVEGPLAGEADTQYFFGXG', 'CASAQGRGTEAFFFGXG', 'CASSSNPIVPQETQYFFGXG', 'CASSRGAESYNSPLHFFGXG', 'CASSLTGGARARLFFFGXG', 'CASSRRGEGHNEQFF']


  # Simons et al, JoI 2008

  hiv_beta_simons = ['CASSLTYGYTFGXG', 'CASSSRTGGYGYTFGXG', 'CASPHPDRPNYGYTFGXG', 'CASGGEFYGYTFGXG', 'CATSDRMDNEQFFGXG', 'CAIGGHDYGYTFGXG', 'CALTGGDYGYTFGXG', 'CASSSLVNTGELFFGXG', 'CSARGWVSNNRETQYFGXG', 'CAASTSAVLGKKGSQETQYFGXG', 'CSAREKGSQETQYFGXG', 'CASSGPGGEQYFGXG', 'CATSDLMDNEQFFGXG', 'CASILTSGRNEQFFGXG', 'CATSDLMDNEQFFGXG', 'CASELSGNTIYFGXG', 'CASSYLNTIYFGXG', 'CASEGGNTIYFGXG', 'CATEASGNTIYFGXG', 'CASEITRDRRNTIYFGXG', 'CASSSWTGQDEQFFGXG', 'CASSGFTGFANEAFFGXG', 'CASSPMDLLDEQYFGXG', 'CASYNFGQYGYTFGXG', 'CASGGANYGYTFFGXG', 'CASSLGLDETQYFFGXG', 'CASSLIAGGGEDTQYFFGXG', 'CASSLNSKVSSSYEQYFFGXG', 'CASRKGQGDWEAFFFGXG', 'CASSDGTGVGLGYTFGXG', 'CATPGEVLSPNYGYTFGXG', 'CASSDGQGRLGYTFGXG', 'CASSLGGGQNGYTFGXG', 'CASSPRDSQETQYFGXG', 'CASSPGQTNYGYTFGXG', 'CASEDFKNIQYFGXG', 'CASSSMGGGTDTQYFGXG', 'CASSLGGGYTFGXG', 'CASSLAGGYTFGXG', 'CASSFWGQGTDTQYFGXG', 'CASMGLAQETQYFGXG', 'CASSQGVTTGGFLNYGYTFGXG', 'CASTDTGYYGYTFGXG', 'CASTDTGDYGYTFGXG', 'CASRGGSGELFFGXG', 'CASSGFRDRVNEQYFGXG']

  # Mendoza et al, JoV 2012
  # http://dx.doi.org/10.1128/JVI.06982-11

  hiv_beta_mendoza = ['CASSLRGGGASYNEQFFGXG', 'CASSPWTYGTGTLNEKLFFGXG', 'CASSLKLADEQFFGXG', 'CASSQDGLLNSYEQYFGXG', 'CASGLGRGWNTEAFFGXG', 'CASSRQLGTGELFFGXG', 'CASSQDPTANSEAFFGXG', 'CASSQDSTSYGYTFGXG', 'CASSQEGHSNQPQHFGXG', 'CASSLVLLGNSPLHFGXG', 'CASSLLQGAASPLHFGXG', 'CASSIWLSGPNYGYTFGXG', 'CASSSQGYGRAQHFGXG', 'CASSQYLLAGARGTYEQYFGXG', 'CASSQGGVQPQHFGXG', 'CASSTPSIPWSTDDFFEQYFGXG', 'CASSWRVMNTEAFFGXG', 'CASRPDRAGSNQPQHFGXG', 'CASGSQGYGRAQHFGXG', 'CASSSQGHGRAQHFGXG', 'CASSSQGYGGAQHFGXG', 'CASSHGQGMKTQYFGXG', 'CSALQLGGAGANEQFFGXG', 'CANSHGQGMKTQYFGXG', 'CASSLGRGMKTQYFGXG', 'CASSYGQGMKTQYFGXG', 'CATSPGQGMKTQYFGXG', 'CASTYDRGFTGELFFGXG', 'CASTYDRGFTGGLFFGXG', 'CASSMTYGYTFGXG', 'CASSGSYGYTFGXG', 'CASRMTYGYTFGXG', 'CASSTTYGYTFGXG', 'CASSLMSGTGTQYFGXG', 'CASSDRSQYGYTFGXG', 'CASNLMSGTDTQYFGXG', 'CASSLMPGTDTQYFGXG', 'CASTLMSGTDTQYFGXG', 'CATGPGAREQYFGXG', 'CSVEDQTDPGYTFGXG', 'CASRPGQGGYEQYFGXG', 'CASSQDPSGNPMETQYFGXG', 'CASSSGTASTGTQYFGXG', 'CASSPDPSGNPMETQYFGXG', 'CASRYPLDLRNTGELFFGXG', 'CAISGASHEQFFGXG', 'CASTQGRGGSGYTFGXG', 'CASSQAGGDAEAFFGXG', 'CASSPGTANSGNTIYFGXG', 'CASSVDAGFTFTQYFGXG', 'CASSLRGDSNQPQHFGXG', 'CASSPPSGIYNEQFFGXG', 'CASSGTSYGYTFGXG', 'CASSLRRDSGPPSNQPQHFGXG', 'CATTGQDYGYTFGXG', 'CASSLLGTVGNQPQHFGXG', 'CASSGTAYGYTFGXG', 'CASTGGSYGYTFGXG', 'CSASSGQGSGNTIYFGXG', 'CASSGANYGYTFGXG', 'CASSGDSYGYTFGXG', 'CASSGQDYGYTFGXG', 'CAWSGQVYGYTFGXG', 'CASSGTDYGYTFGXG', 'CAQGGSNYGYTFGXG', 'CASSSERPSNEQYFGXG', 'CASRAQGPIYEQYFGXG', 'CASSGTNYGYTFGXG', 'CASTGGDYGYTFGXG', 'CASTGPYGYTFGXG', 'CASSQFDRALHQTQYFGXG', 'CASSLSGSSYNEQFFGXG', 'CALTRSYGYTFGXG', 'CASSPGQGFKTQYFGXG', 'CASSPGQGGYEQYFGXG', 'CASSYGQAGEQYFGXG', 'CASSLGRGQETQYFGXG', 'CASSPGQGGYGQYFGXG', 'CASTGQGYGYTFGXG', 'CAEGGRDYGYTFGXG', 'CASSGRNEQFFGXG', 'CASSLGDRAFRNIQYFGXG', 'CASTGSYGYTFGXG', 'CASSQETPRGPPLAKNIQYFGXG', 'CASTGQGYGYTFGXG', 'CASSISYEQYFGXG', 'CASSQETPRGPPLARNIQYFGXG', 'CASSGGEYGYTFGXG', 'CASSPRTGPNYGYTFGXG', 'CASNGQNYGYTFGXG', 'CASNGRNYGYTFGXG', 'CATTGGNYGYTFGXG', 'CASKLAGGYYEQYFGXG', 'CASSPWGDGTDTQYFGXG', 'CASSAPDSQETQYFGXG', 'CASPREFNTEAFFGXG', 'CASTTLGQDQETQYFGXG', 'CASSDSTGVRQPQHFGXG', 'CASSFGTGGVGELFFGXG', 'CASSSATGITGELFFGXG', 'CASSARQGSRTDTQYFGXG', 'CASSQATGNTGELFFGXG', 'CASRMGANTEAFFGXG', 'CASSNPDGTGDNEQFFGXG', 'CASSPLTGATYNEQFFGXG', 'CASSDLTGLTGELFFGXG', 'CASNFGTGGVGELFFGXG', 'CASSLSQGTILYEQYFGXG', 'CASSAGQGWKEQYFGXG', 'CASSGTQVQPQHFGXG', 'CASNAGQGWKEQYFGXG', 'CASSAGQGWKGQYFGXG', 'CASSLIWDRGNYGYTFGXG', 'CASSGSGTGYGYTFGXG', 'CASSLMQGTDTQYFGXG', 'CASSGQGYGYTFGXG', 'CASTGTYGYTFGXG', 'CATSDPNRDTDTQYFGXG', 'CATAESYGYTFGXG', 'CASSRYEQYFGXG', 'CASFLNTEAFFGXG', 'CASSLYEQYFGXG', 'CASSPADSQETQYFGXG', 'CASFPNTEAFFGXG', 'CASSGIGVFFGXG', 'CASTGSYGYTFGXG', 'CASSGGSYGYTFGXG', 'CASSGTYGYTFGXG', 'CATTGGNYGYTFGXG', 'CASSDPGQYGYTFGXG', 'CATDTGSYGYTFGXG', 'CASSNTYGYTFGXG', 'CASSGGWYGYTFGXG', 'CACSRSYGYTFGXG']

  # Conrad et al, JoI 2012
  # http://dx.doi.org/10.4049/jimmunol.1004234

  hiv_beta_conrad = ['CASSLAPGGIAFFFGXG', 'CASSQAEGGQNHFFGXG', 'CAISERAIRGTSGLTDTQYLFGXG', 'CAISECAIRGTSGLTDTQYFFGXG', 'CAISERAIRGTSGLTDTQYFFGXG', 'CASSQAAGGRAFFFGXG', 'CASSQAAGGRAIFFGXG', 'CASSLDSGFLEQYFFGXG', 'CAISESGGRVDEQYFFGXG', 'CASSPPSSYNEQFFFGXG', 'CASSLQGAPEQFFFGXG', 'CTSRLDPGFLEQYFFGXG', 'CASSLYGEYEQYFFGXG', 'CASRTQRWETQYFGXG', 'CASRPGQGGYEQYFGXG', 'CASSQGTTDTQYFFGXG', 'CASSSSTGQQPQHFGXG', 'CASSLAQGWKTQYFGXG', 'CASSIQGLRATNEKLFFGXG', 'CASRSPLGYEQY']

  # Gillespie et al, JoI 2006

  hiv_alpha_gillespie = ['CALSGGYQKVTFGTG', 'CAVSGGYQKVTFGVG', 'CAGSGGYQKVTFGTG']

  hiv_beta_gillespie = ['CASTGSYGYTFGSG', 'CASTGVSYGYTFGSG']

  # Meyer-Olson et al, Blood 2006
  # http://dx.doi.org/10.1182/blood-2005-04-1636

  hiv_beta_meyer = ['CSAQGVAGGPYEQYFGXG', 'CSARDDLGRVGNQPQHFGXG', 'CSVEDRGTGVVNEQFFGXG', 'CASSLERDYEQYFGXG', 'CASSFFSGTASQPQHFGXG', 'CASSQEQGRVVGNEQFFGXG', 'CASSLAALDRVGWDTQYFGXG', 'CASSLAALDRVGWDTQYFGXG', 'CASILARGGVWTDTQYFGXG', 'CASSFTGATDYDYTFGXG', 'CATQTDRPVSDQPQHFGXG', 'CAISETGEETQY2.5FGXG', 'CASSLGQGLANYGYTFGXG', 'CAWDVKDRRIGNEQFFGXG', 'CASSEFPGLSYEQYFGXG', 'CSARAQRTYGYTFGXG', 'CSATILAGVPYGEQYFGXG', 'CSASSQRGGIYEQY']

  # Stewart-Jones et al, PNAS 2012
  # http://dx.doi.org/10.1073/pnas.1207896109

  hiv_alpha_stewart = ['CALSGGYQKVTFGTG']

  hiv_beta_stewart = ['CASTGSYGYTFGSG']

  # Wilson et al, JEM 1998
  # http://dx.doi.org/10.1084/jem.188.4.785 

  hiv_beta_wilson = ['CASSLSLAVQNNEQFFGXG', 'CASSLSLGSSDNELFFGXG', 'CASSSDRSDQQPQHFGXG', 'CASSDTVSYEQYFGXG', 'CASTGSQPQSYEQYFG', 'CASSFDSGNSPLHFG', 'CASSSDRSDQPQHFG', 'CASSFVVSPDTQYFG', 'CASSLVGQGVNEQYFG']

  # Almeida et al, JEM 2007
  # http://www.pubmedcentral.nih.gov/articlerender.fcgi?artid=2118466&tool=pmcentrez&rendertype=abstract

  hiv_beta_almeida = ['CASSPGQLGNTIYFGXG', 'CASRLLGGGQETQYFGXG', 'CASSPGVFGVTGYFGXG', 'CASSPLGGHHSGANVLTFGXG', 'CASSLDSYEQYFGXG', 'CSARDLGLAGDTDTQYFGXG', 'CASSEDYYEQYFGXG', 'CSAREVYYNSPLHFGXG', 'CASSPLGGHHTGANVLTFGXG', 'CSARVTSSDEQYFGXG', 'CASSLDVNEGQFFGXG', 'CASSYDNYEQYFGXG', 'CASGLVLPVRGREETQYFGXG', 'CASSLDRAEQYFGXG', 'CASSTGTVYNEQFFGXG', 'CASSPLGDRETQYFGXG', 'CSASDNELPGSSYNEQFYFGXG', 'CSARQGLNNEQFFGXG', 'CSVPGLAQNEQFFGXG', 'CSASNPLLGQGAGYGYTFGXG', 'CASSPGTGELFFGXG', 'CASSMADLSYEQYFGXG', 'CASSPTGLVGLIQNTEAFFGXG', 'CASSQGQYSHEQYFGXG', 'CASSQGRLSAEAFFGXG', 'CASSPGRLGNEQYFGXG', 'CSAMGGGPYEQYFGXG', 'CASSQGALSNEQFFGXG', 'CASSPGWGSYEQYFGXG', 'CASSSDRSFYGYTFGXG', 'CASSQETGDEQYFGXG', 'CASSLELGDEQFFGXG', 'CASSQETGDTQYFGXG', 'CASSLETGDEQYFGXG', 'CASSFDAEQFFGXG', 'CSAPVLPQETQYFGXG', 'CASEGFLAGQFFGXG', 'CASSLIGHSNQPQHFGXG', 'CASSFDSEQFFGXG', 'CASSFDSEAFFGXG', 'CATSFDSEAFFGXG', 'CSVGGRGTGELFFGXG', 'CASSFGSEAFFGXG', 'CASSFDAEAFFGXG', 'CASTPVGHSNQPQHFGXG', 'CASNLGGPQQPQHFGXG', 'CASSPRQAAYEQYFGXG', 'CANSFDAEAFFGXG', 'CASSYSRGVGNTIYFGXG', 'CAISDFDRAGTQYFGXG', 'CASYPDRGRVNEQFFGXG', 'CASYPDRGRANEQFFGXG', 'CSARDVVDGNTGELFFGXG', 'CASSFLPGQGSYYSNQPQHFGXG']

  # Iglesias, Blood 2011
  # http://www.pubmedcentral.nih.gov/articlerender.fcgi?artid=2118466&tool=pmcentrez&rendertype=abstract

  hiv_beta_iglesias = ['CASSPGQLGNTIYFGXG', 'CASSQGQYGNEQFFGXG', 'CASSQDGVYSNQPQHFGXG', 'CASSPGQLGNTIYFGXG', 'CASAMTGEGYGYTFGXG', 'CASSQGQLGNTIYFGXG', 'CASSLEGSRNTEAFFGXG', 'CSARDLGLAGDTDTQYFGXG', 'CASSQGQLGNTIYFGXG', 'CASSLRGGNTDTQYFGXG', 'CASSPGQFGNTIYFGXG', 'CASMGGANTEAFFGXG', 'CASSPGQFGNTIYFGXG', 'CASRLLGGGQETQYFGXG', 'CASSEGANAYEQYFGXG', 'CASSQGLSSNEQFFGXG', 'CASSPGVLGNTIYFGXG', 'CASSSKTGELFFGXG', 'CASSLGGTNHGYTFGXG', 'CASSLVGSYNEQFFGXG', 'CSARREANYGYTFGXG', 'CASSMGQNSNEQYFGXG', 'CASSGGAHTEAFFGXG', 'CASSQPPDRGYGYTFGXG', 'CASSLDSYEQYFGXG', 'CATSETGELFFGXG', 'CASSPTTYGYTFGXG', 'CASSPGVFGVTQYFGXG', 'CASSLGGLDIEQYFGXG', 'CASSSRTGELFFGXG', 'CASSLVLAIEQYFGXG', 'CASSTTSGRYEQYFGXG', 'CASSLGIPGTAQWVYGYTFGXG', 'CAWSLTGMNQPQHFGXG', 'CAISEYGNAASPLHFGXG', 'CASSVLGTSGGAEQFFGXG', 'CSARDWASGLSSYEQYFGXG', 'CATSGVTGELFFGXG', 'CARREANYGYTFGXG', 'CASSSTRGTEAFFGXG', 'CASSPGTGKNIQYFGXG', 'CASSFGQGAIEQYFGXG', 'CASSQEGVNTEAFFGXG', 'CASSLSSDEHGYTFGXG', 'CASSQAQGLSNSPLHFGXG', 'CASSRTQGPNTDTQYFGXG', 'CASSLDHLAGVNNEQFFGXG', 'CASSGQLLEAFFGXG']

  # Berger, JoV 2011
  # http://www.pubmedcentral.nih.gov/articlerender.fcgi?artid=3165743&tool=pmcentrez&rendertype=abstract

  hiv_beta_berger = ['CATSEAANTGELFFGXG', 'CASSSGDETQYFGXG', 'CASSMIQGADTQYFGXG', 'CASSLGLREQFFGXG', 'CASSFGQGAIEQYFGXG', 'CASSQDRMDRAGEQYFGXG', 'CASSQDQTLYFMNTEAFFGXG', 'CATSRDGAGSNEKLFFGXG', 'CASSLVLAIEQYFGXG', 'CASSLEGGAALWDTQYFGXG', 'CASSGLAGLGQYFGXG', 'CASSQDQALYFMNTEAFFGXG', 'CASSLSSGSSYEQYFGXG', 'CASSSGETGNTEAFFGXG', 'CAWSVFSGAYEQYFGXG', 'CASSLLTLARENTEAFFGXG', 'CASSPVSGEDEQYFGXG', 'CASSSPGTGSGELFFGXG', 'CAISAPDIAGNTIYFGXG', 'CASSVGPGQTEAFFGXG', 'CASSVEIGQTEAFFGXG', 'CATSEAANTGELFFGXG', 'CASSYGGTGPEGSSYEQYFGXG', 'CASTDTQYFGXG', 'CASSMIQGADTQYFGXG', 'CASSSRDREETQYFGXG', 'CASSQGQLGNTIYFGXG', 'CASSLGGTNHGYTFGXG', 'CASSLVLAIEQYFGXG', 'CASSPGTGKNIQYFGXG', 'CASSQEGVNTEAFFGXG', 'CASSQAQGLSNSPLHFGXG', 'CASSRTQGPNTDTQYFGXG', 'CASSLDHLAGVNNEQFFGXG', 'CASSGQLLEAFFGXG', 'CASSLEGSRNTEAFFGXG', 'CASSQPPDRGYGYTFGXG', 'CASSLVGSYNEQFFGXG', 'CASSTTSGRYEQYFGXG', 'CASSFGQGAIEQYFGXG', 'CASSLSSDEHGYTFGXG']
  
  # Sun et al, JoI 2014
  # http://dx.doi.org/10.4049/jimmunol.1400375
  
    # NB Sun et al alpha/beta CDR3s are linked, single cell TCRs, as in the order they appear in
    # Only exception is that 'CASSDTSGANTGELFFGXG' has been removed from the beta reads at position 6 
      # (as it occured in two cells, with different alpha chains)
  
  hiv_alpha_sun = ['CAVPRTGTYKYIFGXG', 'CAVSFYNQGGKLIFGXG', 'CALGELGAPGTYKYIFGXG', 'CAAFKTSYDKVIFGXG', 'CAVSDEVIFGXG', 'CALFLDGQKLLFGXG', 'CAVPVPGTYKYIFGXG', 'CAVIFTGGGNKLTFGXG', 'CALGVDFNKFYFGXG', 'CALGELTNTGGFKTIFGXG', 'CALGELSRTGGFKTIFGXG', 'CALWIMTTDSWGKLQFGXG', 'CALGELSSGGYQKVTFGXG', 'CALGVLDQTGANNLFFGXG', 'CAVWYYGNNRLAFGXG', 'CALGELSGTGGFKTIFGXG', 'CALGELLRGGSNYKLTFGXG', 'CAVLSLISNFGNEKLTFGXG', 'CALGELSSTGGFKTIFGXG', 'CAALNDYKLSFGXG', 'CALGELSHTGGFKTIFGXG', 'CALGELTNTGGFKTIFGXG', 'CALGVLDQTGANNLFFGXG', 'CALGVIGIQGAQKLVFGXG', 'CPFYNQGGKLIFGXG', 'CVVNSGAGSYQLFTFGXG', 'CAVDEGKLIFGXG', 'CAMQDSNYQLIWGXG']

  hiv_beta_sun = ['CASSLTSGANTGELFFGXG', 'CASSPRDKPNYGYTFGXG', 'CSARDPVSTYEQYFGXG', 'CSARDPIRLISYEQYFGXG', 'CASSIRDRVPETQYFGXG', 'CASSDTSGANTGELFFGXG', 'CASSQRDSQETQYFGXG', 'CASKGTVTGELFFGXG', 'CASSYDRGYEQYFGXG', 'CASLPSVGKGAYEQYFGXG', 'CASSQSPGQGVGEQFFGXG', 'CASSDVGQGSSNYGYTFGXG', 'CASSSPGQGYGYTFGXG', 'CASSLMGLAGVPGELFGXG', 'CASSEGFGQGGIEQFFGXG', 'CASSYSHRLGLHEQYFGXG', 'CASSISAGEGVPEQYFGXG', 'CASTSFGQGTNEQFFGXG', 'CASSIDPPGLADNEQFFGXG', 'CASSYDRSYEQYFGXG', 'CASSYSIGTGVNNYGYTFGXG', 'CASSSPGQGYGYTFGXG', 'CASSPSTGKGNQPQHFGXG', 'CASSTALRTGNYGYTFGXG', 'CASSETGGTYEQYFGXG', 'CASSQRDRGTDTEAFFGXG', 'CASSLVSGRGNEQFFGXG']

  # Pantaleo et al, Nature 1994
  # http://dx.doi.org/10.1038/370463a0
  hiv_beta_pantaleo = ['CASTLQGPHNEQFFGXG', 'CASGRQGTNEQFFGXG', 'CASSIGTGGYNEQFFGXG', 'CASSMAGSYNEQFFGXG', 'CASTGQGTNNEQFFGXG', 'CASSTGGPYNEQFFGXG', 'CASTTGSSYNEQFFGXG', 'CASSRRRDLGNEQFFGXG', 'CASNTGAPFNEQFFGXG', 'CASSCCGGSFNEQFFGXG', 'CASSRQGMITEAFFGXG', 'CASSRRRDLGNEQFFGXG', 'CASSAAGGSYNEQFFGXG', 'CASTSDRGRNQPQHFGXG', 'CASRLGQDNTEAFFGXG', 'CASSRTGTGDLEAFFGXG', 'CASSRPRDRRPEAFFGXG', 'CASSSPGTGDLEAFFGXG', 'CASSLEGFSTEAFFGXG', 'CASRGGSTYEQYFGXG', 'CASSLRGDTGELFFGXG', 'CASRPHRGENIQYFGXG', 'CASSPQDRSDEQFFGXG', 'CASSHSGDTQYFGXG', 'CASSSLWDSVNEQFFGXG', 'CASTMTVYNEQFFGXG', 'CASSFAGNEQFFGXG', 'CASRHPGQRSPLHFGXG']

  all_apub = [x for x in dir() if "hiv_alpha" in x]

  all_bpub = [x for x in dir() if "hiv_beta" in x]    # currently ~ 560 cdr3s



###############################################################################################################################
#################     ######    ######    #####  #######  #####################################################################
################  ###  #####  #  ###  ##  ######  #####  ######################################################################
###############  ###########  ##  #  ###  #######  ###  #######################################################################
################  ##  ######  ###   ####  ########  #  ########################################################################
#################    #######  ##########  #########   #########################################################################
###############################################################################################################################

elif pathogen == "c":
  cmv_alpha =  ['CAPPEGGATNKLIFGXG', 'CASFNTGNQFYFGXG', 'CAASILTGGGNKLTFGXG', 'CAASKDGGFKTIFGXG', 'CAFNDYKLSFGXG', 'CAVRDINARLMFGXG', 'CAVRDTDARLMFGXG', 'CAVRDTNARLMFGXG', 'CAGPMKTSYDKVIFGXG', 'CAGPMKTYDKVIFGXG', 'CAVDIETSGSRLTFGXG', 'CAVRSNFGNEKLTFGXG', 'CAVPLGPSYDKVIFGXG']

  cmv_beta = ['CASSDQSQETQYFGXG', 'CASSLTNEQFFGXG', 'CARSWAGGPRDEQYFGXG', 'CASFRGHEQFFGXG', 'CASNTGGANTDTQYFGXG', 'CASREGEYYGYTFGXG', 'CASRLGAAGSQPQHFGXG', 'CASRLGPGQPYEQYFGXG', 'CASRLGPGQPYERYFGXG', 'CASRQGAGGNQPQHFGXG', 'CASRSGPGQPYEQYFGXG', 'CASRSGTYDNSPLHFGXG', 'CASRTGAANIYEQHFGXG', 'CASRTGAANIYEQYFGXG', 'CASRVGGAGNSPLHFGXG', 'CASSAGTGIYDEAFFGXG', 'CASSAGTGIYDGAFFGXG', 'CASSARQGIDTGELFFGXG', 'CASSDPDRAVTEAFFGXG', 'CASSFGQAWETQYFGXG', 'CASSFGQAWYEQYFGXG', 'CASSLAGRETEAFFGXG', 'CASSLDRDRGRPEAFFGXG', 'CASSLGAGNYGYTFGXG', 'CASSLGGSPNYGYTFGXG', 'CASSLIGQGLGDEQFFGXG', 'CASSLMGPGQPQHFGXG', 'CASSLRPLDMNTEAFFGXG', 'CASSLRQGANAGELFFGXG', 'CASSLRQGANTGELFFGXG', 'CASSLRQGEGMGEQFFGXG', 'CASSLRQGINTGELFFGXG', 'CASSLSPSTGNYGYTFGXG', 'CASSLSTSSRNYGYTFGXG', 'CASSLVGTGGWDEQFFGXG', 'CASSPGSSFYGYPFGXG', 'CASSPLTGTGHYGYTFGXG', 'CASSPPLGSGSGDEKLFFGXG', 'CASSSHDKQGARSPLHFGXG', 'CASSSHEDRGSSSPLHFGXG', 'CASSSRDRGAYEQYFGXG', 'CASSSVNEQFFGXG', 'CASSYQTGASYGYTFGXG', 'CASSYSTGIGGGYTFGXG', 'CASTPQTGTGTYGYTFGXG', 'CASSLAPGATNEKLFFGXG', 'CASSLLQGARTEAFFGXG', 'CAISDRGGEDEQYFGXG', 'CASSFTWTSGGTTDTQYFGXG', 'CASSIPGLAGQETQYFGXG', 'CASSLDPAGQGYEQYFGXG', 'CASSLQRGRTDTQYFGXG', 'CASSSAYYGYTFGXG', 'CASSQDPGAAGYGTFGXG', 'CASSQDWGTSGNNEQFFGXG', 'CATSDRTGRHEQYFGXG', 'CASSRENSNQPQHFGXG', 'CASSIPDTEAFFGXG', 'CASSTQGSPDEQYFGXG', 'CAGSLSWGGFYNEQFFGXG', 'CASGLSDRGGDEQFFGXG', 'CASMNDGATYEQYFGXG', 'CASRALRGDNEQFFGXG', 'CASRLGLGYEQYFGXG', 'CASSCAGGPRDEQYFGXG', 'CASSLAERSYEQYFGXG', 'CASSLAPGDGYEQYFGXG', 'CASSLAWGGFYNEQFFGXG', 'CASSLGLAATYNEQFFGXG', 'CASSLGPGNYEQYFGXG', 'CASSLGSSGNEQFFGXG', 'CASSLLGLQGSYNEQFFGXG', 'CASSLRGENRDDYEQYFGXG', 'CASSLRGESLVNEQFFGXG', 'CASSLRGVSSYNEQFFGXG', 'CASSLSDRGGDEQFFGXG', 'CASSLSLLAGNNEQFFGXG', 'CASSLSWGGFYNEQFFGXG', 'CASSLSWGGFYNEQLFGXG', 'CASSLTSEQFFGXG', 'CASSPGTGREQFFGXG', 'CASSPGTLKETQYFGXG', 'CASSRRGESSYNEQFFGXG', 'CASSTSLLAGNNEQFFGXG', 'CASSVAGSATGELFFGXG', 'CASSWAGEPRDEQYFGXG', 'CASSWAGGPRDEQYFGXG', 'CASSYSTVNEQFFGXG', 'CASVNDGATYEQYFGXG', 'CATSIGSSGNEQFFGXG', 'CASSVVNEQFFGXG', 'CASSLIGVSSYNEQFFGXG', 'CASPLIEETIPYEQYFGXG', 'CASSFRGEGHPDTQYFGXG', 'CASSFYSSGRNSYFGXG', 'CASSGVGGTDTQYFGXG', 'CASSLGSSGTRQYFGXG', 'CASSLISGRARNEQFFGXG', 'CASSLKGVGQSDEQYFGXG', 'CASSSHDLAGVKSEQFFGXG', 'CASSVGAGVFTDTQYFGXG', 'CASSVGSEAYTYEQYFGXG', 'CSATGGGEQYFGXG', 'CSVGQGVVYGYTFGXG', 'CTARTGSGLAGGNEQFFGXG', 'CASKLGPAAYEQYFGXG', 'CASRVGAGNTEAFFGXG', 'CASRVGTGNLYEQYFGXG', 'CASSLSPPTYEQYFGXG', 'CASSLTSGSPYNEQFGXG', 'CASRQLPRDSLYEQYFGXG', 'CASSLQTGQETQYFGXG', 'CASSPSHGPNEKLFFGXG', 'CASSSETAPNEKLFFGXG', 'CASSSSSAPNEKLFFGXG', 'CASTTSTAPNEKLFFGXG', 'CSVEEGVLYEQYFGXG', 'CSVVSQFVTDTYFGXG', 'CASSLLPYNALVSGTDTQYFGXG', 'CASSPVGGSMAKNIQYFGXG', 'CASGRGTGTRGRNEQFFGXG', 'CASSPTSGVAGELFFGXG', 'CASSLDSQSSGNTIYFGXG', 'CASSLSGLGAAGVYEQYFGXG', 'CASSYSGNTEAFFGXG', 'CASSCQTGAACGYTFGXG', 'CASSEVTGTAWGYTFGXG', 'CASSLVTGTGKYGYTFGXG', 'CASSRTGGVDAFFGXG', 'CASSYQTGAAYGYTFGXG', 'CASSYSTGTHLEQYFGXG', 'CASSYSTGVPGELFFGXG', 'CASKGQGARDGYTFGXG', 'CASSHWDRETSGNTIYFGXG', 'CASSYGFGPAQGEKLFFGXG', 'CASIEERGSYNEQFFGXG', 'CASILERGSSYNEQFFGXG', 'CASSLESGHYEQYFGXG', 'CASSFRDRGHYEQYFGXG', 'CASSLALGVAKNIQYFGXG', 'CASSLELAMGETQYFGXG', 'CASSLGEGGAQSEQFFGXG', 'CASSLIGQGGPDTQYFGXG', 'CASSLLGQDNSPLHFGXG', 'CASSLQTGLNTEAFFGXG', 'CASSLRQGIDTGELFFGXG', 'CASSLVGEGLRDEQFFGXG', 'CASSNRDRGNYEQFFGXG', 'CASSQHDRGFSTEAFFGXG', 'CASSRELSMGETQYFGXG', 'CASSSHDRDGGYSPLHFGXG', 'CASSSHDRQGQNSPLHFGXG', 'CASSSHERQGQNSPLHFGXG', 'CASSYDWHEQFFGXG', 'CASSSKTSGVINEQFFGXG', 'CASAIVGELFFGXG', 'CASSPGLPYEQYFGXG', 'CASSSVNEQYFGXG', 'CSASNMERWVGQPQHFGXG', 'CASSNHRDRDTDTQYFGXG', 'CASSTVTSKGSDTQYFGXG', 'CSVGRAQNEQFFGXG', 'CASSPADRTRNTEAFFGXG', 'CAWSVTTSSYNSPLHFGXG', 'CAWVPGTGGTEAFFGXG', 'CASSLTGNTEAFFGXG', 'CASSYWDRITSGNTIYFGXG', 'CASSYFLAGGSGANVLTFGXG', 'CATDAGQGLFYGYTFGXG', 'CASSFRTINNEQFFGXG', 'CASSGGTGWGTGELFFGXG', 'CASSPEYLQTDTQYFGXG', 'CASSLRGGGDTQYFGXG', 'CASSALGGAGTGELFFGXG', 'CASSVPSGGETQYFGXG', 'CAPRVHTGELFFGXG', 'CASSANLAGDYNEQFFGXG', 'CASSFANYGYTFGXG', 'CASSHSRDSYNEQFFGXG', 'CASSIVNEQFFGXG', 'CASSLDVDSYNEQFFGXG', 'CASSLIGGRNGYTFGXG', 'CASSLSTAEAFFGXG', 'CASSLTGQETQYFGXG', 'CASSLVGTGGSYEQYFGXG', 'CASSPGNILYGYTFGXG', 'CASSPYGQFYEQYFGXG', 'CASSQWSNEKLFFGXG', 'CASSSAFYGYTFGXG', 'CASSSASYGYTFGXG', 'CASSSATYGYTFGXG', 'CASSSLTGTGYNEQFFGXG', 'CASSSTTGYTFGXG', 'CASSSVDEAFFGXG', 'CASSSVNEAFFGXG', 'CASSSVNGAFFGXG', 'CASSVGGPYTGELFFGXG', 'CASSVVGGRYGYTFGXG', 'CASSESMIQHFGXG', 'CASSFFSKKYNNEQFFGXG', 'CASSFWREPTYEQYFGXG', 'CASSLVGGRYGYTFGXG', 'CASSPGSINYGYTFGXG', 'CASSSAHYGYTFGXG', 'CASSSVTEAFFGXG', 'CASSSANYGYTFGXG', 'CASHYGGSSYEQYFGXG', 'CASSSLGGAGTGELFFGXG', 'CATSRDLVAETQYFGXG', 'CASSPRQGGKQPQHFGXG', 'CSARDFDRTGELFFGXG', 'CSARDPLDYVRTDTQYFGXG', 'CASNPSGGYTGELFFGXG', 'CASSFAGGAAGELFFGXG', 'CASSFGTGHTGELFFGXG', 'CASSFSGGAPGELFFGXG', 'CASSLEGFTEAFFGXG', 'CASSLEGYTEAFFGXG', 'CASSLLIQGGENTEAFFGXG', 'CASSLVSGSPTGELFFGXG', 'CASSPGTGHGELFFGXG', 'CASSRPGQGGYEQYFGXG', 'CASSWLMGTTYNEQFFGXG', 'CASTPAGGAPGELFFGXG', 'CASSFGLNQPQHFGXG', 'CASSVQGYTEAFFGXG', 'CSVDETGGGETQYFGXG', 'CSVDRYGGDTYEQYFGXG', 'CSVGGTLDTQYFGXG', 'CAWIPGTGGAGGLFGXG', 'CAWSVSDIMNTEAFFGXG', 'CASSQADRAVYGYTFGXG', 'CASSEVGATNYGYTFGXG', 'CASSYFPLADTQYFGXG', 'CANSYATGIGNYGYTFGXG', 'CASSLQTGVRSYEQYFGXG', 'CASSLTTGTGSYGYTFGXG', 'CASSPQTGAIYGYTFGXG', 'CASSPVQGAFYNSPLHFGXG', 'CASSSLYGDTGELFFGXG', 'CASSYATGIGNYGYTFGXG', 'CASSYFGGNTEAFFGXG', 'CASSYFGSQSEQYFGXG', 'CASSYQTGAIYGYTFGXG', 'CASSYQTGTIYGYTFGXG', 'CASSYSTGTPGIYTFGXG', 'CASSTPWGGTSGATDTQYFGXG', 'CASSLAPGATSEKLFFGXG', 'CASSLAPGTTNEKLFFGXG', 'CASSLGGGGFYEQYFGXG', 'CASSLSPTSGLSYEQYFGXG', 'CASSALGGGGTGELFFGXG']
  # NB: 'CASSSANYGYTFFGXG' omitted from list
    # It never appears in any of our donors (I checked), while 'CASSSANYGYTFGXG' does
    # Due to the way this searches (placing little faith in the F/FGXGs inferred from the papers) this then gets looked for twice

  all_apub = [x for x in dir() if "cmv_alpha" in x]

  all_bpub = [x for x in dir() if "cmv_beta" in x]    



###############################################################################################################################
##################        #######      ########  #######  #####################################################################
##################  #############  ###  ########  #####  ######################################################################
##################    ###########      ##########  ###  #######################################################################
##################  #############  ###  ##########  #  ########################################################################
##################        #######       ###########   #########################################################################
###############################################################################################################################

elif pathogen == "e":

  ebv_beta = ['CASSPSGANVLTFGXG', 'CASSSLDTEAFFGXG', 'CASSSLSTEAFFGXG', 'CASSSPNTEAFFGXG', 'CSAPSLLNTEAFFGXG', 'CSARSEVGNTIYFGXG', 'CSVPSLLNTEAFFGXG', 'CACSSLNTEAFFGXG', 'CAGSSLNTEAFFGXG', 'CASSLDGRQVNQPQHFGXG', 'CASSLIPGDYYGYTFGXG', 'CASSLLTGHEQFFGXG', 'CASSPRTLGTEAFFGXG', 'CASSTGQAYEQYFGXG', 'CASSTRGGWVEAFFGXG', 'CSAGQGEGEQYFGXG', 'CSAHRTENTEAFFGXG', 'CSARDRTGNTIYFGXG', 'CSARDSTGKGYTFGXG', 'CSARGGTGNGYTFGXG', 'CSARSEVGDTIYFGXG', 'CSARSGVGNTIYFGXG', 'CSARVEPGNGYTFGXG', 'CSATDSMNTEAFFGXG', 'CSGGQGEGEQFFGXG', 'CSGGQGGGEQFFGXG', 'CSSGTGDGGEQFFGXG', 'CSTGQGPYEQYFGXG', 'CSTGSGEGYEQYFGXG', 'CSVDLANAEAFFGXG', 'CSVDLANTEAFFGXG', 'CSVETGDEKLFFGXG', 'CSVGAGEGGPQHFGXG', 'CSVGGGTEAFFGXG', 'CSVGGTFYGYTFGXG', 'CSVGPGENGPQHFGXG', 'CSVGQGEDGPQHFGXG', 'CSVGQGGNYGYTFGXG', 'CSVGQGGTNEKLFFGXG', 'CSVGSGGTNERLFFGXG', 'CSVGTGDNSPLHFGXG', 'CSVKGQGTEAFFGXG', 'CSVKGTNTEAFFGXG', 'CSVPGQVLETQYFGXG', 'CSVPGTDYNEQFFGXG', 'CSVQEGGYGYTFGXG', 'CSVTAGEDQPQHFGXG', 'CSVTSERTGTNWGYTFGXG', 'CSVTSERTGTTWGYTFGXG', 'CSYSPGQGRNEQFFGXG', 'CSARDGTGNGYTFGXG', 'CSARDRTGNGYTFGXG', 'CSARDRVGNTIYFGXG', 'CASSSLNTEAFFGXG', 'CSGGQGEGEQYFGXG', 'CASSDTGGNQPQHFGXG', 'CAISATGAVTEAFFGXG', 'CATLAGEGEQFFGXG', 'CASSFGGGSNYGYTFGXG', 'CASSFTWTSGETTDTQYFGXG', 'CASSHVINQFFGXG', 'CASSLASSGYTGELFFGXG', 'CASSLGTGHNEQFFGXG', 'CASSPITRIVGDTQYFGXG', 'CASSSGNTEAFFGXG', 'CASSSPGDYTYEQYFGXG', 'CASSWGAGSNYGYTFGXG', 'CASSWGGGSNYGYTFGXG', 'CASTPGTEYNEQYFFGXG', 'CASLFTGTSPTDTQYFGXG', 'CASSFSGSLTTEAFFGXG', 'CASSLGDRGLGYTFGXG', 'CASSLGTSFRTDTQYFGXG', 'CASSLIGGDYEQYFGXG', 'CASSLLGEKAYEQYFGXG', 'CASSLVGGQETQYFGXG', 'CASSPGTSGGGDEETQYFGXG', 'CASSSMVAGEYEQFFGXG', 'CASLYRSSTDTQYFGXG', 'CASSFPTSPPITQYFGXG', 'CASSPTGTSHTGELFFGXG', 'CATLISQGSRAGELFFGXG', 'CASTGGSGYTFGXG', 'CASSGTHNEQFFGXG', 'CASSQSPGGIQYFGXG', 'CASSQVSGQGALRALEQFFGXG', 'CATSTGLAGNHEQYFGXG', 'CATTQYGTDTQYFGXG', 'CASKMRGDVYEQYFGXG', 'CASLASGQGSHEQFFGXG', 'CASSPDGELFFGXG', 'CASSPFQRSSGNTIYFGXG', 'CASSPPGPTGRGWYDTFGXG', 'CASMGGASYNEQFFGXG', 'CASRGFLGGGQPQHFGXG', 'CASRGLLGGITEAFFGXG', 'CASSIDGTAYEQYFGXG', 'CASSIQDSLYNEQFFGXG', 'CASSIVGAHTEAFFGXG', 'CASSMLLGGGQPQHFGXG', 'CASTALLGGGYGYTFGXG', 'CATSQGSYGYTFGXG', 'CAGGTGETSPGELFGXG', 'CASRGMTPPTQYFGXG', 'CASSASAGGYYNEQFFGXG', 'CASSDGKIAPSEQYFGXG', 'CASSDSQRMNTEAFFGXG', 'CASSEAAGGFYNEQFFGXG', 'CASSLRTLDGYTFGXG', 'CASTPGSKLPDTQYFGXG', 'CASSLLGGGYAYEQYFGXG', 'CASSPSAAAYEQYFGXG', 'CSAGTGEGGEQFFGXG', 'CSVEASEGLFNEQFFGXG', 'CSVEASGGLFNEQFFGXG', 'CSVEYSPTLYNEQFFGXG', 'CSVGGVSSGVYNEQFFGXG', 'CSVGSGEDNEQFFGXG', 'CSVKGGFPYNEQFFGXG', 'CSVTAGEDDTQYFGXG', 'CSVGAGDYEQYFGXG', 'CSVGAGEGYEQYFGXG', 'CSVGFGEGYEQYFGXG', 'CSAEIIAEAIYNEQFFGXG', 'CSAGQALYNEQFFGXG', 'CSANTGGTYEQYFGXG', 'CSAPEVRGVWGYTFGXG', 'CSAPIPPYNEQFFGXG', 'CSARDCLGLAYEQYFGXG', 'CSARDGARGNTIYFGXG', 'CSARDGLGLAYEQYFGXG', 'CSARDQTGNGYTFGXG', 'CSARDRVGNGYTFGXG', 'CSAREIGGRHQPQHFGXG', 'CSARGAGFSGANVLTFGXG', 'CSARGEAITEKLFGXG', 'CSARGEGGSYNEQFFGXG', 'CSARQEGGSYNEQFFGXG', 'CSARSETGNTIYFGXG', 'CSASNQESYGYTFGXG', 'CSASPPSYNEQFFGXG', 'CSASRALDQPQHFGXG', 'CASSKEESSYNSPLHFGXG', 'CATATGTGSNTEAFFGXG', 'CATSDPDSPTDTQYFGXG', 'CATSDPTLAAYEQYFGXG', 'CATSDTGSFTDTQYFGXG', 'CASSARDRGIGGYTFGXG', 'CASSEGEGQGHYGYTFGXG', 'CASSLEGSYEQYFGXG', 'CASQRDYTGELFFGXG', 'CASRPLMGGASEAFFGXG', 'CASRTLLGGASEQYFGXG', 'CASSDLNSPLHFGXG', 'CASSFSPTAQGLEQYFGXG', 'CASSLSQGIQNIQYFGXG', 'CASSPGQPGPVRETQYFGXG', 'CASSPLTDTQYFGXG', 'CASSPTGLGGGYTFGXG', 'CAGPQGRETQYFGXG', 'CAGRPRLRGGNNEQFFGXG', 'CASSELTGGPYEQYFGXG', 'CASSFFLPTQREYEQYFGXG', 'CASSFIGLNTEAFFGXG', 'CASSFLAGGPPADTQYFGXG', 'CASSFQGSNEKLFFGXG', 'CASSLRNGYEQYFGXG', 'CASSLRTTNEKLFFGXG', 'CASSLSSATGELFFGXG', 'CASSLTSAAGELFFGXG', 'CASSLTSATGELFFGXG', 'CASSLWGEGLTPEAFFGXG', 'CASSLYSDTQYFGXG', 'CASSPLPGTTGTDTQYFGXG', 'CASSRTSATGELFFGXG', 'CASSSLRGSNQPQHFGXG', 'CASSSLTGSGQPQHFGXG', 'CASSSSLGFGELFFGXG', 'CASTQTSAAGELFFGXG', 'CASYWGLAVNEQFFGXG', 'CSVGSGGTNEKLFFGXG', 'CSVQEGNYGYTFGXG', 'CSDGTGDFGTQYFGXG', 'CSTGTGEGGTQYFGXG', 'CSVEEVEAFFGXG', 'CSVEGGPGTAYNEQFFGXG', 'CSVEVQRETEQFFGXG', 'CSVGADGTNEKLFFGXG', 'CSVGGAYEQYFGXG', 'CSVGSQGTNEKLFFGXG', 'CSVGTGGTNEKLFFGXG', 'CSVSAGEEDTQYFGXG', 'CSVSTGGTNEKLFFGXG', 'CSVVLAPVQEQFFGXG', 'CASSPGTLYGYTFGXG', 'CASSPSLVGSADTQYFGXG', 'CASSPTSGSIYEQYFGXG', 'CASSQAGQGNSPLHFGXG', 'CASSQDPRRSYNEQFFGXG', 'CASSQEGRVVGGEQFFGXG', 'CASSQGPGQEHYGYTFGXG', 'CASSQTLAGGGETQYFGXG', 'CASSQTTSVNTEAFFGXG', 'CASSQVRGGYEQFFGXG', 'CASSQVRGRGEQYFGXG', 'CASNPGTSNEQFFGXG', 'CASSLETGSYEQYFGXG', 'CASSPGQGSSYEQYFGXG', 'CASSQAGATRTDTQYFGXG', 'CASSQAGGTMNTEAFFGXG', 'CASSQDAGYEAFFGXG', 'CASSQDRLTGGYTFGXG', 'CASSQEGFREQFFGXG', 'CASSQETGASGTQYFGXG', 'CASSQETGSASQHFGXG', 'CASSQETGSYEQFFGXG', 'CASSQETGSYEQYFGXG', 'CASSQETSLYNEQFFGXG', 'CASSQGALTGQPQHFGXG', 'CASSQGFGGGETQYFGXG', 'CASSQGVGENTEAFFGXG', 'CASSPGQVTPLHFGXG', 'CASSPGVTSGRMGEQYFGXG', 'CASSPLIGTSGTEAFFGXG', 'CASSQAQGMGNSPLHFGXG', 'CASSQDQASEGSETQYFGXG', 'CASSQGVLLNEQFFGXG', 'CASSQVQGTSGGEQYFGXG', 'CASRAGLAEVSYEQYFGXG', 'CASSFRLAVKNEQFFGXG', 'CASSFRDRGSSGGIKGEKLFFGXG', 'CASSPASSGSWETQYFGXG', 'CASSSNRDRNTIYFGXG', 'CASSEEDGQAYEQYFGXG', 'CATSWTGTYEQYFGXG', 'CASSLFGERNEQYFGXG', 'CASSLQGSNQPQHFGXG', 'CASSQEGTGSYEQYFGXG', 'CASSYMGVEQFFGXG', 'CASTPMGLSSGETQYFGXG', 'CASTSGFGSGETQYFGXG', 'CASTVQGRETQYFGXG', 'CASREGSGDNNEQFFGXG', 'CASSDSSLTEAFFGXG', 'CASSESLAVHEQFFGXG', 'CASSAAGELETQYFGXG', 'CASSRRSQGLNTEAFFGXG', 'CASRYRDDSYNEQFFGXG', 'CASRTLAGPNTGELFFGXG', 'CASSLLGHPSGELFFGXG', 'CASSLNGGHYEQYFGXG', 'CASSLNRGAREKLFFGXG', 'CASSLTGGTYEQYFGXG', 'CASSLVLSSPTYYEQYFGXG', 'CASSLVVIQETQYFGXG', 'CASSQGSGATNEQFFGXG', 'CASSQGSGATNGQFFGXG', 'CASSQIVTSAAQYFGXG', 'CASSVLAGDTQYFGXG', 'CASSWGQGSNYGYTFGXG', 'CASSLIASGGYNEQFFGXG', 'CASSLTLLGNNEQYFGXG', 'CASSRGTGEGYEQYFGXG', 'CASSLAVLSSYNEQFFGXG', 'CASSLEAGVSYEQYFGXG', 'CASSLGRGRGNEQFFGXG', 'CASSLLIGANNEQFFGXG', 'CASTREGLNTGELFGXG', 'CASIPEGGRETQYFGXG', 'CASSIGQAYEQYFGXG', 'CASSLGLENEQFGXG', 'CASSLGQAYEQYFGXG', 'CASSMLGGGRDEQFFGXG', 'CASSPGTGEGYEQYFGXG', 'CASSPTNPAGDTETQYFGXG', 'CASSRFFPGQGDHAKNIQYFGXG', 'CASSSGQAYEQYFGXG', 'CASSSVNEQYFGXG', 'CASSVGQAYELYFGXG', 'CASSVGQAYEQYFGXG', 'CASGWGSQPQHFGXG', 'CASLRGLGTDTQYFGXG', 'CASSEPGQGGRGEQYFGXG', 'CASSHIRDYGAFFGXG', 'CASSKQGRGTDTQYFGXG', 'CASSLAPSYEQYFGXG', 'CASSLGASTDTQYFGXG', 'CASSLGLGVNNEQFFGXG', 'CASSLGVSQETQYFGXG', 'CASSLNTLSTEAFFGXG', 'CASSLPGTSGISQDTQYFGXG', 'CASSLPRGRDNEQFFGXG', 'CASSLSSPGNQPQHFGXG', 'CASSLTAPGIQPQHPFGXG', 'CASSLTEAGNQPHHFGXG', 'CASSLTGAGDQPQHFGXG', 'CASSLTGPGDQPQHFGXG', 'CASSLVSSGANVLTFGXG', 'CASSPLGHRDTEAFFGXG', 'CASSRTDDTEAFFGXG', 'CASSSARGHHTQYFGXG', 'CASSSLGGVDQPQHFGXG', 'CASSSTEQATYGYTFGXG', 'CASSSTGPGNSPLHFGXG', 'CASSSVGPGDQPQHFGXG', 'CASSYLGDSTNSPLHFGXG', 'CASTGWVTDTQYFGXG', 'CASSPSKPGDNEQFFGXG', 'CASGTGQLTNTEAFFGXG', 'CASREGDINTGELFFGXG', 'CASSAASGTDTQYFGXG', 'CASSARGGADEQFFGXG', 'CASSEILGMNTEAFFGXG', 'CASSTGQLTNTEAFFGXG', 'CASSVASGTDTQYFGXG', 'CASSVELGSGRETQYFGXG', 'CASTELGDTHNEQFFGXG', 'CASSFGQQETQYFGXG', 'CASSPLAGKGEPQHFGXG', 'CASSAWLVETQYFGXG', 'CASSEGRVAPGELFFGXG', 'CASSEGRVLPGELFFGXG', 'CASSEGRVSPGELFFGXG', 'CSAEPGTQGGTQYFGXG', 'CSARDGTGNDYTFGXG', 'CSARDNLSGYTFGXG', 'CSARDQTGNDYTFGXG', 'CSARDRSLGNTIYFGXG', 'CSAREGTGNGYTFGXG', 'CSARGQGRDAAFFGXG', 'CSARIGVGNAIYFGXG', 'CSARIGVGNTIYFGXG', 'CSARVGVGNTIYFGXG', 'CASSTSDTQYFGXG', 'CSATVTGGWNEQFFGXG', 'CSSQEGGYGYTFGXG', 'CSTQEGGYGYTFGXG', 'CSVEDQRKTKNIQYFGXG', 'CSVPFEGGTLETQHFGXG', 'CSVPFEGGTLETQYFGXG', 'CASSQDRQGQIYGYTFGXG', 'CASSHVGGYEQYFGXG', 'CASSFSRDSDEQFFGXG', 'CASSFSRNSDEQFFGXG', 'CASSLDLGTAKYGYTFGXG', 'CASSLGNTEAFFGXG', 'CASSQEEANYGYTFGXG', 'CASTPDGDNEQFFGXG', 'CASSVAGGDEQYFGXG']


  all_apub = [x for x in dir() if "ebv_alpha" in x]

  all_bpub = [x for x in dir() if "ebv_beta" in x]    # currently ~ 560 cdr3s




###############################################################################################################################
###    ##   ###  #  ######  ###  ######      ###    ######  ######   ###  ##        ###########################################
####  ###    ##  ##  ####  ###    #####  ###  ###  ######    #####    ##  #####  ##############################################
####  ###  #  #  ###  ##  ###  ##  ####     #####  #####  ##  ####  #  #  #####  ##############################################
####  ###  ##    ####    ###        ###  ##  ####  ####        ###  ##    #####  ##############################################
###    ##  ###   #####  ###  ######  ##  ###  ##    ##  ######  ##  ###   #####  ##############################################
###############################################################################################################################

elif pathogen == "g":
  
  gem_alpha_vanrhijn= ['CASMYTGGFKTIFGXG', 'CAVLNTGGFKTIFGXG', 'CAVRRTGGFKTIFGXG', 'CAVRNTGGFKTIFGXG', 'CAVRVTGGFKTIFGXG', 'CAVRNTGGFKTIFGXG', 'CAVRGTGGFKTIFGXG', 'CAVRVTGGFKTIFGXG', 'CAVRNTGGFKTIFGXG', 'CAVLNTGGFKTIFGXG', 'CAVRGTGGFKTIFGXG', 'CAVRNTGGFKTIFGXG', 'CAVRVTGGFKTIFGXG', 'CAVRDTGGFKTIFGXG']

  gem_beta_vanrhijn= ['CASSQPIGGGEQFFGXG', 'CASRPPLTARGLKHTGELFFGXG', 'CAWAKTGFGGDTQYFGXG', 'CASSPRLAGDEQFFGXG', 'CAWSPTSLRLASTDTQYFGXG']


  all_apub_lists = [x for x in dir() if "gem_alpha_" in x] 
  all_bpub_lists = [x for x in dir() if "gem_beta_" in x] 
  
  all_apub_raw = []
  all_bpub_raw = []
  
  for l in all_apub_lists:
    for c in vars()[l]:
      all_apub_raw.append(c)
      
  for l in all_bpub_lists:
    for c in vars()[l]:
      all_bpub_raw.append(c)

  # Prevent duplicate CDR3s making it through

  apub = coll.Counter()
  bpub = coll.Counter()
  
  for x in all_apub_raw:
    apub[x] += 1
   
  for x in all_bpub_raw:
    bpub[x] += 1
  
  uniqa = apub.keys()
  uniqb = bpub.keys()
  
  all_apub = ['uniqa']
  all_bpub = ['uniqb']
  

elif pathogen == "m":

  mait_alpha_vanrhijn = ['CAFMDSNYQLIWGXG']

  mait_beta_vanrhijn = ['CSARTSGDFGEQFFGXG']

  mait_alpha_greenaway = ['CAVRDSNYQLIWGXG', 'CAVMDSNYQLIWGXG', 'CAVLDSNYQLIWGXG', 'CAVVDSNYQLIWGXG', 'CAVTDSNYQLIWGXG', 'CAVKDSNYQLIWGXG', 'CAVIDSNYQLIWGXG', 'CAVGDSNYQLIWGXG', 'CAGLDSNYQLIWGXG', 'CAALDSNYQLIWGXG', 'CAVQDSNYQLIWGXG', 'CALLDSNYQLIWGXG', 'CAAVDSNYQLIWGXG', 'CAAMDSNYQLIWGXG', 'CAGMDSNYQLIWGXG', 'CAPLDSNYQLIWGXG', 'CASMDSNYQLIWGXG', 'CATMDSNYQLIWGXG', 'CARSDSNYQLIWGXG', 'CAIMDSNYQLIWGXG', 'CAAEDSNYQLIWGXG', 'CAGWDSNYQLIWGXG', 'CAAIDSNYQLIWGXG', 'CAFMDSNYQLIWGXG', 'CAVRDRDYQLIWGXG', 'CASIDSNYQLIWGXG', 'CAVMDDNYQLIWGXG']

  mait_beta_lepore = ['CASRLMSGSSYEQYFGXG', 'CASRLMSGSSYEQYFGXG', 'CASRLMSGSSYEQYFGXG', 'CASRLMSGSSYEQYFGXG', 'CASRLMSGSSYEQYFGXG', 'CASSAASGGADTQYFGXG', 'CSARDRRETEAFFGXG', 'CSARDRRETEAFFGXG', 'CSARDRRETEAFFGXG', 'CSARDRRETEAFFGXG', 'CSARGDREAYNEQFFGXG', 'CSARGDREAYNEQFFGXG', 'CSARGIDRVTNEQFFGXG', 'CASSQERGSQETQYFGXG', 'CASSLGSSGNTIYFGXG', 'CASSPSGGGAQETQYFGXG', 'CSATGTGDTGELFFGXG', 'CSAPWAGVNEKLFFGXG', 'CSAPWAGVNEKLFFGXG', 'CSAPWAGVNEKLFFGXG', 'CSAPWAGVNEKLFFGXG', 'CSAPWAGVNEKLFFGXG', 'CSAPWAGVNEKLFFGXG', 'CATSREGRASNEQYFGXG', 'CASSYSTSGADTQYFGXG', 'CASSVGQENYEQYFGXG', 'CASSVGQENYEQYFGXG', 'CASSQEGQGAPTDTQYFGXG', 'CASSNRVTSTDTQYFGXG']

  mait_alpha_lepore = ['CVWMDSSYKLIFGXG', 'CAVRDSSYKLIFGXG', 'CAVLDSSYKLIFGXG', 'CAVMDSSYKLIFGXG', 'CAVVDSSYKLIFGXG', 'CAVLDSSYKLIFGXG', 'CAVMDSSYKLIFGXG', 'CAVMDSSYKLIFGXG', 'CAVMDSSYKLIFGXG', 'CAVMDSSYKLIFGXG', 'CAVMDSSYKLIFGXG', 'CAVMDSSYKLIFGXG', 'CAVRDFDYKLSFGXG', 'CAVRDGDYKLSFGXG', 'CAVRDNDYLSFGXG', 'CAVRDNDYKLSFGXG', 'CAVRDNDYKLSFGXG', 'CAVRLNDYKLSFGXG', 'CAVRLNDYKLSFGXG', 'CAVRDADYKLSFGXG', 'CAVNSNDYKLSFGXG']

  mait_alpha_reantragoon = ['CAVMDSNYQLIWGXG', 'CAVMDSSYKLIFGXG', 'CAVRDGDYKLSFGXG']


  all_apub_lists = [x for x in dir() if "mait_alpha_" in x]

  all_bpub_lists = [x for x in dir() if "mait_beta_" in x]
  
  all_apub_raw = []
  all_bpub_raw = []
  
  for l in all_apub_lists:
    for c in vars()[l]:
      all_apub_raw.append(c)
      
  for l in all_bpub_lists:
    for c in vars()[l]:
      all_bpub_raw.append(c)

  # Prevent duplicate CDR3s making it through

  apub = coll.Counter()
  bpub = coll.Counter()
  
  for x in all_apub_raw:
    apub[x] += 1
   
  for x in all_bpub_raw:
    bpub[x] += 1
  
  uniqa = apub.keys()
  uniqb = bpub.keys()
  
  all_apub = ['uniqa']
  all_bpub = ['uniqb']
  

elif pathogen == "n":

  nkt_alpha_vanrhijn = ['CVVSDRGSTLGRLYFGXG']

  nkt_beta_vanrhijn = ['CASSESQYGRAAYNEQFFGXG']

  nkt_alpha_greenaway = ['CVVSDRGSTLGRLYFGXG', 'CVVSRGSTLGRLYFGXG', 'CVVTDRGSTLGRLYFGXG', 'CVVNDRGSTLGRLYFGXG', 'CVVGDRGSTLGRLYFGXG', 'CVVRADRGSTLGRLYFGXG', 'CVVFDRGSTLGRLYFGXG', 'CVASDRGSTLGRLYFGXG', 'CVVARDRGSTLGRLYFGXG', 'CVSVDRGSTLGRLYFGXG', 'CVVSDKGSTLGRLYFGXG', 'CVVSATNRGSTLGRLYFGXG', 'CVVPGRLYFGXG']

  nkt_beta_exley = ['CASREGAMGTGELFFGEG', 'CASSATRALTGSDTQYFGPG', 'CASSFLDRDYSYNEQFFGPG', 'CASSENRQGAGYEQYFGPG', 'CASSERTTNTGELFFGEG', 'CASSVRPGGNEQFFGPG', 'CASSDGEQANTEAFFGQG', 'CASSATIRDRASGYTFGSG', 'CASSDTRVGGELFFGEG', 'CASSLGESNQPQHFGDG', 'CASSVPGPAYEQYFGPG', 'CASSDTRVGGELFFGEG', 'CASGTQGNTEAFFGQG', 'CASEYGGPSYGYTFGSG']

  nkt_alpha_han = ['CILRDVGNTPLVFGXG', 'CAVMDSNYQLIFGXG', 'CAVKNFGNEKLTFGXG', 'CVVSDRGSTLGRLYFGXG']

  nkt_alpha_demoulins = ['CVVTLPMTTDSWGKFQFGXG', 'CVVSDRGSTLGRLYFGXG', 'CVVTDRGSTLGRLYFGXG', 'CVVSGRQTGANNLFFGXG', 'CVVSIAGFQKLVFGXG', 'CVVINTGGFKTIFGXG', 'CVVIATGANNLFFGXG', 'CVVSDRGSTLGRLYFGXG', 'CVVSNDRGSTLGRLYFGXG', 'CALDMVAGGGNKLTFGXG', 'CALDMSGGSYIPTFGXG', 'CALEITGGGNKLTFGXG', 'CALSNSGGYQKVTFGXG', 'CALDREGSNYQLIWGXG', 'CAPDSGGGADGLTFGXG', 'CALEBAGSYQLTFGXG', 'CALDTGRRALTFGXG', 'CALDQSNARLMFGXG', 'CALDNAGNMLTFGXG', 'CALKAGTYKYIFGXG', 'CATETSGSRLTFGXG', 'CVVRADRGSTLGRLYFGXG', 'CVVSRENNARLMFGXG', 'CVVSSGGSYIPTFGXG', 'CVVSPISGGYNKLIFGXG', 'CVVSRENNARLMFGXG', 'CVVSARAGTASKLTFGXG', 'CVVSRENNARLMFGXG', 'CVVSVDYKLSFGXG', 'CVVSRENNARLMFGXG', 'CVVQTGGGNKLTFGXG', 'CVSLKGSQGNLIFGXG', 'CVVSRENNARLMFGXG', 'CALGHLRSARQLTFGXG', 'CALYSGAGSYQLTFGXG', 'CALHGSNNTGKLIFGXG', 'CALHGSSNTGKLIFGXG', 'CALEGPGDQKLLFGXG', 'CALGKLNARLMFGXG', 'CALITNAGKSTFGXG', 'CALHGVTGGGNKLTFGXG', 'CALDDYSGNTGKLIFGXG', 'CALDLSGGSYIPTFGXG', 'CALYSGAGSYQLTFGXG', 'CALHGSGNTGKLIFGXG', 'CALHGSSNTGKLIFGXG', 'CALGYTGTASKLTFGXG', 'CALVNQGGKLIFGXG', 'CVVRADRGSTLGRLYFGXG', 'CVVSDRGSTLGRLYFGXG', 'CVVSDKGSTLGRLYFGXG', 'CVVSATNRGSTLGRLYFGXG']


  all_apub_lists = [x for x in dir() if "nkt_alpha_" in x] 

  all_bpub_lists = [x for x in dir() if "nkt_beta_" in x] 
  
  all_apub_raw = []
  all_bpub_raw = []
  
  for l in all_apub_lists:
    for c in vars()[l]:
      all_apub_raw.append(c)
      
  for l in all_bpub_lists:
    for c in vars()[l]:
      all_bpub_raw.append(c)

  # Prevent duplicate CDR3s making it through

  apub = coll.Counter()
  bpub = coll.Counter()
  
  for x in all_apub_raw:
    apub[x] += 1
   
  for x in all_bpub_raw:
    bpub[x] += 1
  
  uniqa = apub.keys()
  uniqb = bpub.keys()
  
  all_apub = ['uniqa']
  all_bpub = ['uniqb']
  
  
  


###############################################################################################################################
###############################################################################################################################
###############################################################################################################################
###############################################################################################################################
###############################################################################################################################


###########################

cutoff = 2 # threshold below which frequency CDR3s will be ignored

###########################

hva_prp = coll.defaultdict(list)
hvb_prp = coll.defaultdict(list)

hiva_prp = coll.defaultdict(list)
hivb_prp = coll.defaultdict(list)

# and to store what counts
hva_c = coll.defaultdict(list)
hvb_c = coll.defaultdict(list)

hiva_c = coll.defaultdict(list)
hivb_c = coll.defaultdict(list)


ballposs = []

for f in all_bpub:
  for c in vars()[f]:
    if c.endswith("FFGXG"):
      ballposs.append(c[:-3])
      ballposs.append(c[:-4])
    else:
      ballposs.append(c[:-3])
    
for c in ballposs:
  if c in allb_cdr3s.keys():

    print "\t", c + " in healthies:", "-------------------------"
    for v1, v2 in it.izip(hvv1_beta, hvv2_beta):
      thisv1 = vars()[v1]
      thisv2 = vars()[v2]
      if thisv1[c] >= cutoff and thisv2[c] >= cutoff:
        prop1 = (thisv1[c]/sum(thisv1.values()))
        prop2 = (thisv2[c]/sum(thisv2.values()))
        print "\t\t", v1, thisv1[c], v2, thisv2[c], "\t", round(prop1, 4), round(prop2, 4) 
        if thisv1[c] == 0:
 	  hvb_prp[c].append([1e-6,prop2])   
	elif thisv2[c] == 0:
	  hvb_prp[c].append([prop1,1e-6])   
	else:
	  hvb_prp[c].append([prop1,prop2])   
  
    print "\t", c + " in HIV:"
    for v1, v2 in it.izip(hivv1_beta, hivv2_beta):
      thisv1 = vars()[v1]
      thisv2 = vars()[v2]
      if thisv1[c] >= cutoff and thisv2[c] >= cutoff:
	prop1 = (thisv1[c]/sum(thisv1.values()))
        prop2 = (thisv2[c]/sum(thisv2.values()))
        print "\t\t", v1, thisv1[c], v2, thisv2[c], "\t", round(prop1, 4), round(prop2, 4)
        if thisv1[c] == 0:
 	  hivb_prp[c].append([1e-6,prop2])   
	elif thisv2[c] == 0:
	  hivb_prp[c].append([prop1,1e-6])   
	else:
	  hivb_prp[c].append([prop1,prop2])   	            

print "==================================================================================================="



aallposs = []

for f in all_apub:
  for c in vars()[f]:
    if c.endswith("FFGXG"):
      aallposs.append(c[:-3])
      aallposs.append(c[:-4])
    else:
      aallposs.append(c[:-3])
    
for c in aallposs:
  if c in alla_cdr3s.keys():

    print "\t", c + " in healthies:", "-------------------------"
    for v1, v2 in it.izip(hvv1_alpha, hvv2_alpha):
      thisv1 = vars()[v1]
      thisv2 = vars()[v2]
      if thisv1[c] >= cutoff and thisv2[c] >= cutoff:
	prop1 = (thisv1[c]/sum(thisv1.values()))
        prop2 = (thisv2[c]/sum(thisv2.values()))
        print "\t\t", v1, thisv1[c], v2, thisv2[c], "\t", round(prop1, 4), round(prop2, 4) 
        if thisv1[c] == 0:
 	  hva_prp[c].append([1e-6,prop2])   
	elif thisv2[c] == 0:
	  hva_prp[c].append([prop1,1e-6])   
	else:
	  hva_prp[c].append([prop1,prop2])   
  
    print "\t", c + " in HIV:"
    for v1, v2 in it.izip(hivv1_alpha, hivv2_alpha):
      thisv1 = vars()[v1]
      thisv2 = vars()[v2]
      if thisv1[c] >= cutoff and thisv2[c] >= cutoff:
	prop1 = (thisv1[c]/sum(thisv1.values()))
        prop2 = (thisv2[c]/sum(thisv2.values()))
        print "\t\t", v1, thisv1[c], v2, thisv2[c], "\t", round(prop1, 4), round(prop2, 4)
        if thisv1[c] == 0:
 	  hiva_prp[c].append([1e-6,prop2])   
	elif thisv2[c] == 0:
	  hiva_prp[c].append([prop1,1e-6])   
	else:
	  hiva_prp[c].append([prop1,prop2])   	            

print "==================================================================================================="

        


# out lists, for plotting in R

outnames = "("
alpha = unichr(0x3b1).encode('utf-8')
beta = unichr(0x3b2).encode('utf-8')


hva1 = []
hva2 = []

for a in hva_prp: 
  for b in hva_prp[a]: 
    hva1.append(b[0])
    hva2.append(b[1])

hvb1 = []
hvb2 = []
    
for a in hvb_prp: 
  for b in hvb_prp[a]: 
    hvb1.append(b[0])
    hvb2.append(b[1])
    
hiva1 = []
hiva2 = []

for a in hiva_prp: 
  for b in hiva_prp[a]: 
    hiva1.append(b[0])
    hiva2.append(b[1])
    outnames = outnames + "\'" + alpha + "-" + a + "\', "
    
hivb1 = []
hivb2 = []
    
for a in hivb_prp: 
  for b in hivb_prp[a]: 
    hivb1.append(b[0])
    hivb2.append(b[1])
    outnames = outnames + "\'" + beta + "-" + a + "\', "

outnames = outnames[:-2] + ")"
    
if pathogen == "h":
  outp = "HIV"
elif pathogen == "e":
  outp = "EBV"
elif pathogen == "c":
  outp = "CMV"
elif pathogen == "g":
  outp = "GEM"
elif pathogen == "n":
  outp = "NKT"
elif pathogen == "m":
  outp = "MAIT"
 
print outp + "hiv_v1 <- c(" + str(hiva1+hivb1)[1:-1] + ")"
print outp + "hiv_v2 <- c(" + str(hiva2+hivb2)[1:-1] + ")"

print outp + "names <- c" + outnames

print outp + "hv_v1 <- c(" + str(hva1+hvb1)[1:-1] + ")"
print outp + "hv_v2 <- c(" + str(hva2+hvb2)[1:-1] + ")"

#sys.exit()

# optional plotting, to check things look sensible/have found expected number of CDR3s

fig = plt.figure()
ax = fig.add_subplot(111)
ax.set_yscale('log')

jitter = 0.1

for i in hvb_prp:
  print i, hvb_prp[i]
  for x in hvb_prp[i]:
    ax.plot([1+random.uniform(-jitter, jitter),2+random.uniform(-jitter, jitter)], 
	    x, label=i, color="blue", alpha=.5, marker='v')


for i in hivb_prp:
  print i, hivb_prp[i]
  for x in hivb_prp[i]:
    ax.plot([1+random.uniform(-jitter, jitter),2+random.uniform(-jitter, jitter)], 
	    x, label=i, color="red", alpha=.5, marker='v')


for i in hva_prp:
  print i, hva_prp[i]
  for x in hva_prp[i]:
    ax.plot([1+random.uniform(-jitter, jitter),2+random.uniform(-jitter, jitter)], 
	    x, label=i, color="blue", alpha=.5, marker='^')


for i in hiva_prp:
  print i, hiva_prp[i]
  for x in hiva_prp[i]:
    ax.plot([1+random.uniform(-jitter, jitter),2+random.uniform(-jitter, jitter)], 
	    x, label=i, color="red", alpha=.5, marker='^')

 
plt.xlim(0.5, 2.5)
plt.xticks([1,2])
ax.set_xticklabels(["v1", "v2"])
plt.show()

# out lists, for plotting in R
sys.exit()
hva1 = []
hva2 = []

for a in hva_prp: 
  for b in hva_prp[a]: 
    hva1.append(b[0])
    hva2.append(b[1])

hvb1 = []
hvb2 = []
    
for a in hvb_prp: 
  for b in hvb_prp[a]: 
    hvb1.append(b[0])
    hvb2.append(b[1])

hiva1 = []
hiva2 = []

for a in hiva_prp: 
  for b in hiva_prp[a]: 
    hiva1.append(b[0])
    hiva2.append(b[1])

hivb1 = []
hivb2 = []
    
for a in hivb_prp: 
  for b in hivb_prp[a]: 
    hivb1.append(b[0])
    hivb2.append(b[1])
    



